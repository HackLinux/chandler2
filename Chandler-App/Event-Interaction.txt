============================
 Events - Interaction Model
============================

XXX Ultimately the interaction model will be working with dashboard
    entries, not Event(Item) objects.  Is there some way the same
    Extension can/should apply to both Dashboard Entries and Items?
    For now these tests are written applying EventFieldVisibility to
    an item.

>>> from chandler.event import *
>>> from chandler.core import Item
>>> from datetime import datetime
>>> from chandler.time_services import TimeZone
>>> item = Item()
>>> event = Event(item).add()
>>> event.base_start = datetime(2008, 5, 5, 18, tzinfo=TimeZone.pacific)

XXX Should visibility be different for items with None for start/end?

Field visibility
================

XXX Field visibility should definitely be collected via entry points, somehow

When an ``Event`` is displayed in the detail view, fields are hidden
and shown based on whether that field is applicable to the item.

>>> vis = EventFieldVisibility(item)
>>> vis.event is event
True

For ``all_day`` events, there's no time associated with the event, and
timezone choices aren't relevant.  Transparency choices should be
available.

>>> event.all_day = True
>>> vis.show_time, vis.show_timezone, vis.show_transparency
(False, False, True)

``any_time`` events also have no timezone, but rather than hiding time
fields, empty time fields are shown to invite users to add more
specific time information, so ``clear_time`` will be ``True``.

Also, because ``any_time`` events have an ``implied_transparency``,
transparency choices shouldn't be shown.

>>> event.all_day, event.base_any_time = False, True
>>> event.any_time
True
>>> vis.show_time, vis.show_timezone, vis.show_transparency, vis.clear_time
(True, False, False, True)

If ``is_day`` isn't set for an event, times and timezones should be shown.

>>> event.base_any_time = False
>>> vis.show_time, vis.show_timezone, vis.clear_time
(True, True, False)

XXX recurrence and location should always be visible for events
