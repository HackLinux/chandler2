===============
 Triage Status
===============

.. module:: chandler.triage

Triage status is based on three states:

  ============ ============
  English Name Numeric code
  ============ ============
  Now          100.0
  Later        200.0
  Done         300.0
  ============ ============

These primary values are the defaults, but arbitrary additional triage
states can be defined in plugins.

>>> from chandler.triage import *
>>> from chandler.core import Item
>>> item = Item()
>>> item_triage = Triage(item)
>>> item_triage.calculated
100.0

:attr:`~Triage.calculated` is the "real" value that should be used for
displaying the current triage status. It's read-only, based on
:attr:`~Triage.manual` and :attr:`~Triage.auto`.

Triage status can be directly set using :attr:`~Triage.manual`.  If
set, :attr:`~Triage.manual` overrides triage status from other
sources.

>>> item_triage.manual = LATER
>>> item_triage.calculated
200.0

Triage status must be either ``None``, or an int or float >= 100.

>>> item_triage.manual = 99
Traceback (most recent call last):
 . . .
TriageRangeError: Can't set triage status to: 99

.. index:: hook; chandler.domain.triage
.. _triage-hook:

Auto triage
===========

If :attr:`~Triage.manual` is ``None``, :attr:`~Triage.auto` is used to
determine :attr:`~Triage.calculated`.

The :attr:`~Triage.auto` cell is calculated by taking the highest
weighted value from applying the :ref:`chandler.domain.triage
<triage-hook-central>` hook.  If no values are found, :const:`NOW`
is used.

>>> item_triage.manual = None
>>> item_triage.calculated
100.0


XXX test triage status of unrecognized 250, calculated falls back to 200

XXX How do I test:
  assuming no chandler.triage.types entry points
  add entry points in code

Triage Positioning
==================

Triage status is tightly entwined with positioning entries in the
triage-sorted dashboard view.

:class:`TriagePosition` of an item has a read-only float
:attr:`~TriagePosition.position` cell.  The default value is the
item's created timestamp.

>>> from chandler import time_services   # set up the current time
>>> from datetime import datetime
>>> eight_am = datetime(2008, 10, 1, 8, tzinfo=time_services.TimeZone.eastern)
>>> time_services.setNow(eight_am)
>>> time_services.timestamp(eight_am)
1222862400.0

>>> item = Item()
>>> item_position = TriagePosition(item)
>>> item_position.position
1222862400.0
>>> item_triage = Triage(item)

:attr:`~TriagePosition.position` is based on two cells,
:attr:`~TriagePosition.default_position` and
:attr:`~TriagePosition.pinned_position`.

:attr:`~TriagePosition.pinned_position` is used to hold an item
visible in a different location than its underlying item's default
position would be.  This allows item position to be stable as a user
makes changes that would otherwise move the item.

>>> item_position.position == item_position.default_position
True
>>> item_position.pinned_position = 1234567890.0
>>> item_triage.manual = DONE
>>> item_position.position
1234567890.0

When sorted by triage status, items are sorted into different
sections, determined by :attr:`~TriagePosition.triage_section`.  This
defaults to calculated triage status, but can be overridden with
:attr:`~TriagePosition.pinned_triage`.

>>> item_position.triage_section
300.0
>>> item_position.pinned_triage_section = NOW
>>> item_position.triage_section
100.0

XXX should recognized custom triage statuses be in their own sections?
    If not section definition might need an entry point, too.


Shortcut Methods
----------------

There are a few shortcuts for setting pinned values. ``pin()`` sets
pinned values to match the current state of their default values, but
only if no pinned values are set.  ``clear_pinned()`` resets pinned
values to ``None``.

>>> item_position.default_triage_section, item_position.default_position
(300.0, 1222862400.0)
>>> item_position.triage_section, item_position.position
(100.0, 1234567890.0)
>>> item_position.pin()
>>> item_position.triage_section, item_position.position
(100.0, 1234567890.0)
>>> item_position.clear_pinned()
>>> item_position.triage_section, item_position.position
(300.0, 1222862400.0)
>>> item_position.pin()
>>> item_triage.manual = NOW
>>> item_position.triage_section, item_position.position
(300.0, 1222862400.0)

``pin_to_now()`` sets ``pinned_triage_section`` to NOW and
``position`` to the timestamp for the current time.

>>> item_triage.manual = LATER
>>> item_position.clear_pinned()
>>> item_position.triage_section, item_position.position
(200.0, 1222862400.0)
>>> item_position.pin_to_now()
>>> item_position.triage_section, item_position.position
(100.0, 1222862400.0)

.. index:: hook; chandler.domain.triage_position (used by chandler.triage)
.. _triage-position-hook:

The *triage_position* hook
--------------------------

The default position values, equal to triage_status, aren't very
useful except for testing.

Usually, position will be a float measuring seconds since the epoch
for some time.  It's value is found by applying all
:ref:`chandler.interaction.triage_position
<triage-position-hook-central>` hooks on the item and choosing the
largest.

XXX should use, define, explain triage_position entry point
    triage_position eps should return ``None`` if they don't apply, or
    (weight, value) if they do apply (the weight is needed because,
    for instance, both the reminder and event-ness positions might
    apply to the same item)
